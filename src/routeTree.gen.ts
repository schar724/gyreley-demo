/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PermissionDeniedImport } from './routes/permission-denied'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutHelpRouteImport } from './routes/_layout/help_/route'
import { Route as LayoutPlasticPipeLocatesIndexImport } from './routes/_layout/plastic-pipe-locates/index'
import { Route as LayoutOperatorSupportIndexImport } from './routes/_layout/operator-support_/index'
import { Route as LayoutHelpIndexImport } from './routes/_layout/help_/index'
import { Route as LayoutDashboardIndexImport } from './routes/_layout/dashboard/index'
import { Route as LayoutAdminPanelIndexImport } from './routes/_layout/admin-panel_/index'
import { Route as LayoutHelpQuickstartImport } from './routes/_layout/help_/quickstart'
import { Route as LayoutHelpFaqImport } from './routes/_layout/help_/faq'
import { Route as LayoutHelpDownloadsImport } from './routes/_layout/help_/downloads'
import { Route as LayoutPlasticPipeLocatesPlasticLocateIdIndexImport } from './routes/_layout/plastic-pipe-locates/$plasticLocateId/index'

// Create Virtual Routes

const LayoutHelpPfmanualLazyImport = createFileRoute(
  '/_layout/help_/pfmanual',
)()

// Create/Update Routes

const PermissionDeniedRoute = PermissionDeniedImport.update({
  id: '/permission-denied',
  path: '/permission-denied',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutHelpRouteRoute = LayoutHelpRouteImport.update({
  id: '/help_',
  path: '/help',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPlasticPipeLocatesIndexRoute =
  LayoutPlasticPipeLocatesIndexImport.update({
    id: '/plastic-pipe-locates/',
    path: '/plastic-pipe-locates/',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutOperatorSupportIndexRoute = LayoutOperatorSupportIndexImport.update(
  {
    id: '/operator-support_/',
    path: '/operator-support/',
    getParentRoute: () => LayoutRoute,
  } as any,
)

const LayoutHelpIndexRoute = LayoutHelpIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutHelpRouteRoute,
} as any)

const LayoutDashboardIndexRoute = LayoutDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminPanelIndexRoute = LayoutAdminPanelIndexImport.update({
  id: '/admin-panel_/',
  path: '/admin-panel/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHelpPfmanualLazyRoute = LayoutHelpPfmanualLazyImport.update({
  id: '/pfmanual',
  path: '/pfmanual',
  getParentRoute: () => LayoutHelpRouteRoute,
} as any).lazy(() =>
  import('./routes/_layout/help_/pfmanual.lazy').then((d) => d.Route),
)

const LayoutHelpQuickstartRoute = LayoutHelpQuickstartImport.update({
  id: '/quickstart',
  path: '/quickstart',
  getParentRoute: () => LayoutHelpRouteRoute,
} as any)

const LayoutHelpFaqRoute = LayoutHelpFaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => LayoutHelpRouteRoute,
} as any)

const LayoutHelpDownloadsRoute = LayoutHelpDownloadsImport.update({
  id: '/downloads',
  path: '/downloads',
  getParentRoute: () => LayoutHelpRouteRoute,
} as any)

const LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute =
  LayoutPlasticPipeLocatesPlasticLocateIdIndexImport.update({
    id: '/plastic-pipe-locates/$plasticLocateId/',
    path: '/plastic-pipe-locates/$plasticLocateId/',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/permission-denied': {
      id: '/permission-denied'
      path: '/permission-denied'
      fullPath: '/permission-denied'
      preLoaderRoute: typeof PermissionDeniedImport
      parentRoute: typeof rootRoute
    }
    '/_layout/help_': {
      id: '/_layout/help_'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof LayoutHelpRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/help_/downloads': {
      id: '/_layout/help_/downloads'
      path: '/downloads'
      fullPath: '/help/downloads'
      preLoaderRoute: typeof LayoutHelpDownloadsImport
      parentRoute: typeof LayoutHelpRouteImport
    }
    '/_layout/help_/faq': {
      id: '/_layout/help_/faq'
      path: '/faq'
      fullPath: '/help/faq'
      preLoaderRoute: typeof LayoutHelpFaqImport
      parentRoute: typeof LayoutHelpRouteImport
    }
    '/_layout/help_/quickstart': {
      id: '/_layout/help_/quickstart'
      path: '/quickstart'
      fullPath: '/help/quickstart'
      preLoaderRoute: typeof LayoutHelpQuickstartImport
      parentRoute: typeof LayoutHelpRouteImport
    }
    '/_layout/help_/pfmanual': {
      id: '/_layout/help_/pfmanual'
      path: '/pfmanual'
      fullPath: '/help/pfmanual'
      preLoaderRoute: typeof LayoutHelpPfmanualLazyImport
      parentRoute: typeof LayoutHelpRouteImport
    }
    '/_layout/admin-panel_/': {
      id: '/_layout/admin-panel_/'
      path: '/admin-panel'
      fullPath: '/admin-panel'
      preLoaderRoute: typeof LayoutAdminPanelIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/help_/': {
      id: '/_layout/help_/'
      path: '/'
      fullPath: '/help/'
      preLoaderRoute: typeof LayoutHelpIndexImport
      parentRoute: typeof LayoutHelpRouteImport
    }
    '/_layout/operator-support_/': {
      id: '/_layout/operator-support_/'
      path: '/operator-support'
      fullPath: '/operator-support'
      preLoaderRoute: typeof LayoutOperatorSupportIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plastic-pipe-locates/': {
      id: '/_layout/plastic-pipe-locates/'
      path: '/plastic-pipe-locates'
      fullPath: '/plastic-pipe-locates'
      preLoaderRoute: typeof LayoutPlasticPipeLocatesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/plastic-pipe-locates/$plasticLocateId/': {
      id: '/_layout/plastic-pipe-locates/$plasticLocateId/'
      path: '/plastic-pipe-locates/$plasticLocateId'
      fullPath: '/plastic-pipe-locates/$plasticLocateId'
      preLoaderRoute: typeof LayoutPlasticPipeLocatesPlasticLocateIdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutHelpRouteRouteChildren {
  LayoutHelpDownloadsRoute: typeof LayoutHelpDownloadsRoute
  LayoutHelpFaqRoute: typeof LayoutHelpFaqRoute
  LayoutHelpQuickstartRoute: typeof LayoutHelpQuickstartRoute
  LayoutHelpPfmanualLazyRoute: typeof LayoutHelpPfmanualLazyRoute
  LayoutHelpIndexRoute: typeof LayoutHelpIndexRoute
}

const LayoutHelpRouteRouteChildren: LayoutHelpRouteRouteChildren = {
  LayoutHelpDownloadsRoute: LayoutHelpDownloadsRoute,
  LayoutHelpFaqRoute: LayoutHelpFaqRoute,
  LayoutHelpQuickstartRoute: LayoutHelpQuickstartRoute,
  LayoutHelpPfmanualLazyRoute: LayoutHelpPfmanualLazyRoute,
  LayoutHelpIndexRoute: LayoutHelpIndexRoute,
}

const LayoutHelpRouteRouteWithChildren = LayoutHelpRouteRoute._addFileChildren(
  LayoutHelpRouteRouteChildren,
)

interface LayoutRouteChildren {
  LayoutHelpRouteRoute: typeof LayoutHelpRouteRouteWithChildren
  LayoutAdminPanelIndexRoute: typeof LayoutAdminPanelIndexRoute
  LayoutDashboardIndexRoute: typeof LayoutDashboardIndexRoute
  LayoutOperatorSupportIndexRoute: typeof LayoutOperatorSupportIndexRoute
  LayoutPlasticPipeLocatesIndexRoute: typeof LayoutPlasticPipeLocatesIndexRoute
  LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute: typeof LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutHelpRouteRoute: LayoutHelpRouteRouteWithChildren,
  LayoutAdminPanelIndexRoute: LayoutAdminPanelIndexRoute,
  LayoutDashboardIndexRoute: LayoutDashboardIndexRoute,
  LayoutOperatorSupportIndexRoute: LayoutOperatorSupportIndexRoute,
  LayoutPlasticPipeLocatesIndexRoute: LayoutPlasticPipeLocatesIndexRoute,
  LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute:
    LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/permission-denied': typeof PermissionDeniedRoute
  '/help': typeof LayoutHelpRouteRouteWithChildren
  '/help/downloads': typeof LayoutHelpDownloadsRoute
  '/help/faq': typeof LayoutHelpFaqRoute
  '/help/quickstart': typeof LayoutHelpQuickstartRoute
  '/help/pfmanual': typeof LayoutHelpPfmanualLazyRoute
  '/admin-panel': typeof LayoutAdminPanelIndexRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/help/': typeof LayoutHelpIndexRoute
  '/operator-support': typeof LayoutOperatorSupportIndexRoute
  '/plastic-pipe-locates': typeof LayoutPlasticPipeLocatesIndexRoute
  '/plastic-pipe-locates/$plasticLocateId': typeof LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutRouteWithChildren
  '/permission-denied': typeof PermissionDeniedRoute
  '/help/downloads': typeof LayoutHelpDownloadsRoute
  '/help/faq': typeof LayoutHelpFaqRoute
  '/help/quickstart': typeof LayoutHelpQuickstartRoute
  '/help/pfmanual': typeof LayoutHelpPfmanualLazyRoute
  '/admin-panel': typeof LayoutAdminPanelIndexRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/help': typeof LayoutHelpIndexRoute
  '/operator-support': typeof LayoutOperatorSupportIndexRoute
  '/plastic-pipe-locates': typeof LayoutPlasticPipeLocatesIndexRoute
  '/plastic-pipe-locates/$plasticLocateId': typeof LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/permission-denied': typeof PermissionDeniedRoute
  '/_layout/help_': typeof LayoutHelpRouteRouteWithChildren
  '/_layout/help_/downloads': typeof LayoutHelpDownloadsRoute
  '/_layout/help_/faq': typeof LayoutHelpFaqRoute
  '/_layout/help_/quickstart': typeof LayoutHelpQuickstartRoute
  '/_layout/help_/pfmanual': typeof LayoutHelpPfmanualLazyRoute
  '/_layout/admin-panel_/': typeof LayoutAdminPanelIndexRoute
  '/_layout/dashboard/': typeof LayoutDashboardIndexRoute
  '/_layout/help_/': typeof LayoutHelpIndexRoute
  '/_layout/operator-support_/': typeof LayoutOperatorSupportIndexRoute
  '/_layout/plastic-pipe-locates/': typeof LayoutPlasticPipeLocatesIndexRoute
  '/_layout/plastic-pipe-locates/$plasticLocateId/': typeof LayoutPlasticPipeLocatesPlasticLocateIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/permission-denied'
    | '/help'
    | '/help/downloads'
    | '/help/faq'
    | '/help/quickstart'
    | '/help/pfmanual'
    | '/admin-panel'
    | '/dashboard'
    | '/help/'
    | '/operator-support'
    | '/plastic-pipe-locates'
    | '/plastic-pipe-locates/$plasticLocateId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/permission-denied'
    | '/help/downloads'
    | '/help/faq'
    | '/help/quickstart'
    | '/help/pfmanual'
    | '/admin-panel'
    | '/dashboard'
    | '/help'
    | '/operator-support'
    | '/plastic-pipe-locates'
    | '/plastic-pipe-locates/$plasticLocateId'
  id:
    | '__root__'
    | '/_layout'
    | '/permission-denied'
    | '/_layout/help_'
    | '/_layout/help_/downloads'
    | '/_layout/help_/faq'
    | '/_layout/help_/quickstart'
    | '/_layout/help_/pfmanual'
    | '/_layout/admin-panel_/'
    | '/_layout/dashboard/'
    | '/_layout/help_/'
    | '/_layout/operator-support_/'
    | '/_layout/plastic-pipe-locates/'
    | '/_layout/plastic-pipe-locates/$plasticLocateId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  PermissionDeniedRoute: typeof PermissionDeniedRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  PermissionDeniedRoute: PermissionDeniedRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/permission-denied"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/help_",
        "/_layout/admin-panel_/",
        "/_layout/dashboard/",
        "/_layout/operator-support_/",
        "/_layout/plastic-pipe-locates/",
        "/_layout/plastic-pipe-locates/$plasticLocateId/"
      ]
    },
    "/permission-denied": {
      "filePath": "permission-denied.tsx"
    },
    "/_layout/help_": {
      "filePath": "_layout/help_/route.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/help_/downloads",
        "/_layout/help_/faq",
        "/_layout/help_/quickstart",
        "/_layout/help_/pfmanual",
        "/_layout/help_/"
      ]
    },
    "/_layout/help_/downloads": {
      "filePath": "_layout/help_/downloads.tsx",
      "parent": "/_layout/help_"
    },
    "/_layout/help_/faq": {
      "filePath": "_layout/help_/faq.tsx",
      "parent": "/_layout/help_"
    },
    "/_layout/help_/quickstart": {
      "filePath": "_layout/help_/quickstart.tsx",
      "parent": "/_layout/help_"
    },
    "/_layout/help_/pfmanual": {
      "filePath": "_layout/help_/pfmanual.lazy.tsx",
      "parent": "/_layout/help_"
    },
    "/_layout/admin-panel_/": {
      "filePath": "_layout/admin-panel_/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/help_/": {
      "filePath": "_layout/help_/index.tsx",
      "parent": "/_layout/help_"
    },
    "/_layout/operator-support_/": {
      "filePath": "_layout/operator-support_/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plastic-pipe-locates/": {
      "filePath": "_layout/plastic-pipe-locates/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/plastic-pipe-locates/$plasticLocateId/": {
      "filePath": "_layout/plastic-pipe-locates/$plasticLocateId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
